**fullpage란
: 현재 페이지에서 꽉찬화면으로 보여지는 것.
해상도의 세로값에 따라서 변화가 되며 꽉찬화면으로 보여짐.
(해상도의 세로값이 600px 이라면 이 값을 따라서 출력이 됨)
---------------------------------------------------------------------

- fullpage에 버튼추가해서 만들기
1. 마우스휠을 사용할때 버튼에 색상 추가하기
2. 버튼을 클릭할때 해당하는 페이지로 이동
3. 사이즈를 줄였을때 버튼의 색상 유지하기
----------------------------------------
1. 마우스휠을 사용할때 버튼에 색상 추가하기
1-1. 제이쿼리에서 쓰는 마우스 휠 이벤트를 사용하기전에
이벤트의 주체를 알아야한다.
'마우스휠이 된니까 세로가 넘쳤다 -> 세로가 넘치니까 세로스크롤이 생겼다. -> 스크롤은 body한테 생긴다.'
그래서 body한테 세로값이 들어가있는지 확인

1-2. 확인햇더니 body한테 세로값이 들어가 있지않음.
 :body는 html상에서 없어도 되는 태그인거고 우리가 코딩을할때 웹상에서
실질적인 부분을 알려주기 위해 존재했던 것.
그리고 감싸는 태그가 없다면 body는 쓸모없는 존재임.
또한 감싸는 태그가 있음으로써 어느영역까지가 태그인것을
알수가 있음.
즉, body는 html,css로 인해서 존재함. 그래서 세로값이 없었던 것.
(감싸주는 역활뿐이니까)

1-3. 그러면 세로값이 없다면 background-color가 적용된 이유는?
: 단지 어떤 종이에다가 태그를 작성할지만을 고른것뿐.
body나 다른 태그들과는 아무 상관이없다(착각임)

1-4. body가 아니라면 어떤 주체한테 줘야하나?
: fullpage는 해상도의 세로값으로 인해서 출력이 되는것.
해상도만 따라간다고 보면 된다.
해상도 = 화면 = 창 = window '그래서 body가 아닌 window에게 이벤트를 주면됨


1-5.주체를 찾았으니 마우스휠 이벤트 구문 적기
: 페이지의 배경색이 같거나 어떤 텍스트도 작성되어있지 않다면
몇페이지인지 알수가 없음.
구형 플러그인에서는 이런 점을 body한테  class를 넣어서 
현재 페이지가 몇페이지인지 알수있게 만들었음.
우리는 이 클래스명을 갖고 마우스휠을 할때마다 버튼의 색상을 넣다 뺏다 할것임.

마우스휠을 할때마다 body 한테 들어가 있는 class명과
btn의 순번에 맞춰서 색상을 넣다 뺏다 할것
----------------------------------------------------------------------
2.버튼을 클릭할때 해당하는 페이지로 이동

2-1. 화면에서 출력되 ㄴ해상도의 세로값 받아오기
var $window_height = $(window).height();

-> 구형 플러그인에는 버튼이 없었는데 우리가 억지로 집어넣음.
억지로 넣다보니 각.section의 위치를 알수가 없음/.
또한 해상도의 세로값에 따라서 변경이 되기때문에 받아와야함!

**화면상으로만 볼때 .section만 움직이는 것처럼 보이지만
사실상 전체를 감싸는 #fullpage가 움직이는 것.
그 중에서 *top:0인 화면 최상단* 이 기준이다.
(모든 페이지는 화면 최상단에서부터 시작하니까)
각.section도 top:0을 기준으로 위치를 갖는 것!!!

2-2. 받아온 세로값의 위치를계산함
var $top = $window_height*-1;

-> 모두 같은 해상도의 세로값이라서 배가 되는 것이고
px인 단위를 붙이지 않는것은 세로값은 계속 변하니까 제이쿼리가 계산을 해줘야함
앞에 top:-1, top:-2 '-'를 작성하는 것은 슬라이드의 방향이 
위로 올라가니까! margin-top:-100px을 생각하면 됨


2-3. 위치를 계산했으면 이동하는 동작을 작성
$("#fullpage").css({"transform": "translate3d(0px,"+$top+"px, 0px)"," transition": "all 700ms ease 0s"});
-> 구형 플러그인은 transform과 transition 을 사용해서 슬라이드가 움직임!
translate3d(x축, y축, z축)이고 fullpage의 동작은 상하로 움직이니까 우리가 계산한 $top은
'y축'에 넣는다.!!

**height가 아닌 top인 이유는
fullpage는 태그의 영역으로 구하는것이 아니고 해상도의 세로값으로
구하는 것이라서! height로 하게되면 고정값이 되버린다.
------------------------------------------------------------------------------
3. 사이즈를 줄였을때 버튼의 색상 유지하기
: 구형 플러그인은 반응형이 짜여져있음!
해상도가 바뀔때마다 세로값이 변화가 되는것을 볼수있음
그래서 $(window).height()와 $("body").css("height",a);을 작성할필요가 없음!

3-1.화면은 변화가 되지만 현재페이지로 유지되고 있는 버튼을 이용함
var $click_1 = $btn.eq(0).hasClass("on");
-> 해상도의 변화가 일어나도 버튼의 색상을 유지가 된다.
그래서 현재 출력된 페이지를 알수있기 때문에 이것을 이용할것임!

3-2.세로가 변화될때마다 위치를 계산해줘야함
var $window_height = $(window).height();
var $top = $window_height_height*0;

$("#fullpage").css({"transform": "translate3d(0px,"+$top+"px, 0px)"," transition": "all 700ms ease 0s"});
-> 화면의 해상도를 받아와서 위치를 계산하고 계산한값으로
이동하는 동작을 구현함!
이때는 첫번째 버튼을 눌렀을때의 위치 계산도 해줘야한다.



